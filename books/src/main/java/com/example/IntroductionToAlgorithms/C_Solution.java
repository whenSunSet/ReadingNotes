package com.example.IntroductionToAlgorithms;

/**
 * Created by heshixiyang on 2017/4/24.
 */
public class C_Solution {
    public static void main(String[] args) {
//        Scanner in = new Scanner(System.in);
        String n="2295",A="28855 26597 10746 5132 3927 20900 3106 16044 3695 175 32325 23991 30513 515 8124 53 5460 18441 22687 28649 17755 20423 14894 8232 30745 9811 15983 32492 3957 25230 11033 23589 30827 26382 7089 23375 9811 92 30451 9033 21350 13152 21363 16485 10878 20505 3972 27836 15901 7314 8281 12996 28849 11281 23658 7716 12822 13969 17689 28358 13917 1138 5014 558 2508 17008 3328 26379 9765 20946 25037 20236 27948 26851 7275 21237 11363 6054 25383 15602 3608 1222 4431 19755 7073 30412 27539 11416 13543 32148 29617 535 8481 20482 8018 23996 7394 12785 30254 28264 2390 30316 23415 13725 8392 29217 1653 11664 21608 29202 28270 5504 14156 2702 11720 22599 6836 21088 8305 16687 16274 24134 16767 29446 16714 4261 3092 21877 7606 4474 25477 27789 32365 660 18107 20131 10053 17409 21209 11358 11798 23750 22814 7950 24513 23507 3086 12607 30321 17717 1996 21903 1313 24462 14795 16316 15455 30146 27557 21505 27727 24820 30027 8355 26610 28337 23135 5575 11688 30570 22238 28550 30964 14632 7938 1603 8576 19067 22119 31036 27489 14771 620 26464 11419 11347 31708 10849 27624 4803 9166 18441 23733 17477 24521 3537 23662 5930 8492 2736 21755 18758 31693 23345 10379 19617 4065 31688 2704 19567 19228 5478 27146 32323 17689 30795 20745 4991 15099 14620 23917 24335 28245 9269 14065 855 27463 31552 9832 15465 31210 12550 12870 6780 16110 6022 25697 16538 20354 13380 7417 31640 15476 12004 5878 17739 22682 3575 370 2041 15984 13845 21111 13838 22786 24364 14090 2576 29709 29719 17512 725 5985 4211 20111 28660 12681 4270 2048 8825 21934 26720 20164 5597 4281 13023 19117 9525 6584 12814 16606 8361 24963 12149 16525 22312 17823 29591 3336 26714 27234 18303 26870 29398 88 13469 9952 29334 30950 30416 8944 25511 28205 21700 2552 32037 16945 21118 4533 6247 14651 29237 1622 6263 4988 30564 20792 26053 27122 24605 23796 21020 21136 2208 31387 30932 3993 11564 11328 28490 20045 15893 30903 22925 14535 14871 11421 14170 24358 746 11416 32075 15339 24598 15584 20043 22434 9225 25087 26957 20421 10087 16085 7998 17629 3745 5086 25911 29674 3529 17336 22264 32517 7845 223 15762 10564 23810 2236 28259 2526 32074 4062 5703 31375 4441 17287 17677 17726 3981 1130 19752 21726 20508 16051 19367 28050 29867 840 27752 12308 28188 17998 16008 27735 5287 26352 11549 1899 1580 25691 28712 30882 16071 25613 2501 8689 8102 27984 9125 1944 22551 32257 24766 11013 25829 23702 30529 3318 6629 19296 9933 6879 27084 268 24290 2955 24643 2672 10648 28421 574 31109 11921 30137 2185 1455 25132 13015 10403 325 13563 24056 24528 18509 22392 22532 29802 3207 26099 30547 8568 8878 4303 24338 8322 13562 5358 26089 1443 32489 6250 20442 8671 30271 16262 24429 24503 1355 3556 522 19963 14957 26616 7078 19680 4309 18620 13730 4434 13965 32677 5359 29323 29626 2774 31607 13797 5919 24981 6328 19692 3042 17147 28082 14776 31891 23791 10244 3450 10090 24405 14418 13652 18384 20354 10217 2414 14625 12275 29094 21062 14001 20543 25108 14407 23821 22859 17108 20894 20611 27069 21826 16969 11492 22195 24661 8816 8840 25780 21959 7929 25747 3303 21110 2135 19575 8834 32267 17314 22202 27782 3545 20973 23802 1962 28424 25044 12590 9364 23538 8020 32302 30287 24781 13792 4470 25850 5003 14512 29222 22717 766 25949 26958 12546 8512 29867 24425 15329 11602 28069 13095 16859 24579 12016 28016 31180 24595 8793 30373 31003 16793 20144 12585 29748 5282 15321 7456 25400 18203 23840 26998 24306 24049 30157 5667 18958 18806 11256 2990 6789 22791 15775 19440 22364 4588 3062 8219 7822 28031 28926 26619 18247 17040 4953 28283 29778 24073 11357 26474 10965 3790 29799 31359 16700 10471 10610 32667 14963 17377 25576 20559 24920 14449 11703 21150 14448 8539 4008 8452 4568 25490 2285 29623 25471 417 9464 12076 11155 15945 9108 15325 31033 21100 26414 2890 28033 14890 7539 28221 18585 23881 22049 8275 22337 5850 31766 11448 21630 24601 25774 4146 5011 8854 26955 15457 1581 30098 16181 24645 29406 19116 421 6656 28620 19901 8732 30173 30123 31744 13049 24210 7912 13942 16459 25282 26407 21384 10980 29638 32496 29679 14767 429 1957 7889 21827 6273 19384 26924 8631 25292 18202 11384 27320 13659 5111 4232 5594 2114 4000 27826 3884 289 19401 17455 25615 29349 8180 25028 72 30033 28461 22178 16723 32126 30200 24716 21498 4768 13448 31543 4135 3020 18737 8438 18167 30071 20256 32407 14095 1153 5450 7815 6963 14962 16802 20285 1813 7939 13455 18646 1642 13024 16541 22013 12867 32684 2675 1038 12443 26949 9477 7803 21036 9290 15882 31086 17032 30171 28337 20400 32356 8352 1167 14281 1079 8973 22236 29801 29444 10980 31712 9222 2931 25083 29352 5063 18215 30783 5373 14753 31308 3833 26007 6592 13167 26960 3725 6952 19859 1551 9232 3996 26753 1705 32601 29374 15199 1915 17888 9337 30084 19792 28879 8860 8587 27690 26806 1479 16038 19264 2432 17803 1077 10819 8870 1997 920 3045 18338 32619 7233 10652 1191 7715 30221 21667 19343 7600 30164 26691 11541 9269 24639 12624 12868 2015 7897 28406 27183 30150 23401 20662 32739 21 25984 5547 27802 22379 5710 12562 6705 13185 9913 6153 2524 12044 11185 7319 21273 6885 11453 31213 3810 3175 2266 30187 807 11032 7558 15334 8827 396 25624 21673 13326 21895 31058 24505 14299 19298 17209 29150 23330 22704 10532 15582 4377 18977 4628 25740 9183 24742 7491 9473 20913 18901 18688 11818 19040 30608 31673 22659 8450 6881 9050 5921 1512 17961 24278 19190 23761 31354 26114 23377 861 9281 9130 14244 23493 19240 13791 9866 28616 31034 18574 1544 16361 7496 32343 24851 4823 27788 23451 32339 22829 1933 26583 19495 31067 26178 31025 19945 6116 20346 24145 28275 12235 24444 23154 23522 3911 25066 10169 20634 3262 747 29637 28042 2033 7048 2695 2481 2933 7511 9044 6880 8802 24919 1080 7106 13903 24092 28558 4891 2429 2348 4045 8269 8530 26536 21925 12576 13577 4655 31819 17602 29865 12287 10257 24589 15411 11613 21305 5897 1824 12600 32011 20402 14346 5641 20261 8699 2218 27133 11539 30994 13826 14934 25119 23014 15579 11790 24938 29415 14962 13246 19516 22796 17775 18111 12953 5659 21270 3983 16917 27685 31937 25462 22249 29263 14734 26473 9029 28377 24661 23086 24808 4696 1501 18881 16623 30790 2895 14327 3562 4285 28906 29281 13365 22400 16633 8563 9350 31803 9986 21221 17602 24588 1857 858 25365 3137 10836 27456 24385 1636 20792 4855 32310 9589 17780 29237 7140 19574 14740 7849 12109 11821 3545 19934 21726 32293 19759 11875 21247 13046 30303 23593 19689 15814 25990 29740 6071 23312 29126 2901 26048 24740 4923 3231 15397 11503 9521 17018 26278 7037 6292 3949 23994 8892 10919 6654 21214 32515 29689 28630 22317 3794 25494 25633 20529 17500 31354 11572 12025 20546 23371 1394 7531 27042 583 21360 5596 22352 14715 7511 6366 7779 7477 19338 30041 31220 17597 32393 22238 34 25408 31766 3639 6233 29965 30614 18499 9941 19716 14777 9985 4449 5706 27485 28906 357 7746 1968 19076 1823 31417 14741 11828 561 24673 10314 5715 29532 15745 30535 3461 7051 27882 32105 6470 3091 5421 30543 12998 3129 2059 14597 16887 30709 13869 8927 20196 31733 2838 23976 23876 21221 17749 8700 9807 26606 7935 3827 9424 636 23132 21504 10108 24389 1761 12824 23938 23175 4702 6166 4451 3984 31353 24158 1540 4484 12891 26048 10754 8539 4265 7584 5445 1321 22966 13652 1240 25762 14839 31950 18679 20189 17591 14459 22890 19800 19211 27754 1042 10301 7945 252";
//        n = in.nextLine();
//        A = in.nextLine();
        String[] AS=A.split(" ");
        int[] AI=new int[AS.length];
        for (int i = 0; i < AS.length; i++) {
            AI[i]=Integer.valueOf(AS[i]);
        }
        int nI=Integer.valueOf(n);
        solution(nI,AI);
    }

    /**
     输入包含多组测试数据。

     对于每组测试数据：

     N - 本组测试数据有n个数

     a1,a2...an - 需要计算的数据

     保证:

     1<=N<=100000,0<=ai<=INT_MAX.



     输出描述:

     对于每组数据，输出两个数，第一个数表示差最小的对数，第二个数表示差最大的对数。

     输入例子:
     6
     45 12 45 32 5 6

     输出例子:
     1 2
     */

    public static void solution(int n,int[] A){
        int max=0,min=Integer.MAX_VALUE,maxNum=0,minNum=0,j=A.length-1;
        int[] sum=new int[j];
        quickSort(A,0,j);
        max=A[A.length-1]-A[0];
        for (int i = 0; i < sum.length; i++) {
            sum[i]=A[i+1]-A[i];
            if (sum[i]<0)sum[i]=sum[i]*(-1);
            if (min>sum[i])min=sum[i];
        }
        if (min==0){
            int commonLast=Integer.MIN_VALUE,commonNow=A[0],commonNum=1;
            for (int i = 0; i < A.length; i++) {
                commonNow=A[i];
                if (commonLast==commonNow){
                    System.out.println(i);
                    commonNum++;
                }else {
                    if (commonNum>1)System.out.println("--------"+commonNum);
                    minNum=minNum+C(commonNum);
                    commonNum=1;
                }
                commonLast=commonNow;
            }
            minNum=minNum+C(commonNum);
        }else {
            for (int i = 0; i < sum.length; i++) {
                if (sum[i]==min)minNum++;
            }
        }
        int mi=A[0],ma=A[A.length-1],miN=0,maN=0;
        if (max==0){
            int common=A[0],commonNum=0;
            for (int i = 0; i < A.length; i++) {
                if (common==A[i]){
                    commonNum++;
                }else {
                    maxNum=maxNum+C(commonNum);
                    common=A[i];
                    commonNum=1;
                }
            }
        }else {
            for (int i = 0; i < A.length; i++) {
                if (mi==A[i])miN++;
                if (ma==A[i])maN++;
            }
        }
        maxNum=miN*maN;
        System.out.println((minNum + " " + maxNum));
    }

    public static int C(int n){
        return (n*n-n)/2;
    }

    public static void quickSort(int[] A,int start,int end){
        if (start<end){
            int middle=partition(A,start,end);
            quickSort(A,start,middle-1);
            quickSort(A,middle+1,end);
        }
    }

    public static int partition(int[] A,int start,int end){
        /**
         * partition(A,start,end)
         * x=A[end]
         * j=start-1
         * for i=start to end-1
         *      if A[i]<=x
         *          j++
         *          exchange A[j] with A[i]
         * exchange A[j+1] with A[end]
         * return j+1
         */

        int x=A[end],j=start-1;
        for (int i = start; i <end; i++) {
            if (A[i]<=x){
                j++;
                int temp=A[j];
                A[j]=A[i];
                A[i]=temp;
            }
        }
        int temp=A[j+1];
        A[j+1]=A[end];
        A[end]=temp;
        return j+1;
    }
    /**
     2295
     28855 26597 10746 5132 3927 20900 3106 16044 3695 175 32325 23991 30513 515 8124 53 5460 18441 22687 28649 17755 20423 14894 8232 30745 9811 15983 32492 3957 25230 11033 23589 30827 26382 7089 23375 9811 92 30451 9033 21350 13152 21363 16485 10878 20505 3972 27836 15901 7314 8281 12996 28849 11281 23658 7716 12822 13969 17689 28358 13917 1138 5014 558 2508 17008 3328 26379 9765 20946 25037 20236 27948 26851 7275 21237 11363 6054 25383 15602 3608 1222 4431 19755 7073 30412 27539 11416 13543 32148 29617 535 8481 20482 8018 23996 7394 12785 30254 28264 2390 30316 23415 13725 8392 29217 1653 11664 21608 29202 28270 5504 14156 2702 11720 22599 6836 21088 8305 16687 16274 24134 16767 29446 16714 4261 3092 21877 7606 4474 25477 27789 32365 660 18107 20131 10053 17409 21209 11358 11798 23750 22814 7950 24513 23507 3086 12607 30321 17717 1996 21903 1313 24462 14795 16316 15455 30146 27557 21505 27727 24820 30027 8355 26610 28337 23135 5575 11688 30570 22238 28550 30964 14632 7938 1603 8576 19067 22119 31036 27489 14771 620 26464 11419 11347 31708 10849 27624 4803 9166 18441 23733 17477 24521 3537 23662 5930 8492 2736 21755 18758 31693 23345 10379 19617 4065 31688 2704 19567 19228 5478 27146 32323 17689 30795 20745 4991 15099 14620 23917 24335 28245 9269 14065 855 27463 31552 9832 15465 31210 12550 12870 6780 16110 6022 25697 16538 20354 13380 7417 31640 15476 12004 5878 17739 22682 3575 370 2041 15984 13845 21111 13838 22786 24364 14090 2576 29709 29719 17512 725 5985 4211 20111 28660 12681 4270 2048 8825 21934 26720 20164 5597 4281 13023 19117 9525 6584 12814 16606 8361 24963 12149 16525 22312 17823 29591 3336 26714 27234 18303 26870 29398 88 13469 9952 29334 30950 30416 8944 25511 28205 21700 2552 32037 16945 21118 4533 6247 14651 29237 1622 6263 4988 30564 20792 26053 27122 24605 23796 21020 21136 2208 31387 30932 3993 11564 11328 28490 20045 15893 30903 22925 14535 14871 11421 14170 24358 746 11416 32075 15339 24598 15584 20043 22434 9225 25087 26957 20421 10087 16085 7998 17629 3745 5086 25911 29674 3529 17336 22264 32517 7845 223 15762 10564 23810 2236 28259 2526 32074 4062 5703 31375 4441 17287 17677 17726 3981 1130 19752 21726 20508 16051 19367 28050 29867 840 27752 12308 28188 17998 16008 27735 5287 26352 11549 1899 1580 25691 28712 30882 16071 25613 2501 8689 8102 27984 9125 1944 22551 32257 24766 11013 25829 23702 30529 3318 6629 19296 9933 6879 27084 268 24290 2955 24643 2672 10648 28421 574 31109 11921 30137 2185 1455 25132 13015 10403 325 13563 24056 24528 18509 22392 22532 29802 3207 26099 30547 8568 8878 4303 24338 8322 13562 5358 26089 1443 32489 6250 20442 8671 30271 16262 24429 24503 1355 3556 522 19963 14957 26616 7078 19680 4309 18620 13730 4434 13965 32677 5359 29323 29626 2774 31607 13797 5919 24981 6328 19692 3042 17147 28082 14776 31891 23791 10244 3450 10090 24405 14418 13652 18384 20354 10217 2414 14625 12275 29094 21062 14001 20543 25108 14407 23821 22859 17108 20894 20611 27069 21826 16969 11492 22195 24661 8816 8840 25780 21959 7929 25747 3303 21110 2135 19575 8834 32267 17314 22202 27782 3545 20973 23802 1962 28424 25044 12590 9364 23538 8020 32302 30287 24781 13792 4470 25850 5003 14512 29222 22717 766 25949 26958 12546 8512 29867 24425 15329 11602 28069 13095 16859 24579 12016 28016 31180 24595 8793 30373 31003 16793 20144 12585 29748 5282 15321 7456 25400 18203 23840 26998 24306 24049 30157 5667 18958 18806 11256 2990 6789 22791 15775 19440 22364 4588 3062 8219 7822 28031 28926 26619 18247 17040 4953 28283 29778 24073 11357 26474 10965 3790 29799 31359 16700 10471 10610 32667 14963 17377 25576 20559 24920 14449 11703 21150 14448 8539 4008 8452 4568 25490 2285 29623 25471 417 9464 12076 11155 15945 9108 15325 31033 21100 26414 2890 28033 14890 7539 28221 18585 23881 22049 8275 22337 5850 31766 11448 21630 24601 25774 4146 5011 8854 26955 15457 1581 30098 16181 24645 29406 19116 421 6656 28620 19901 8732 30173 30123 31744 13049 24210 7912 13942 16459 25282 26407 21384 10980 29638 32496 29679 14767 429 1957 7889 21827 6273 19384 26924 8631 25292 18202 11384 27320 13659 5111 4232 5594 2114 4000 27826 3884 289 19401 17455 25615 29349 8180 25028 72 30033 28461 22178 16723 32126 30200 24716 21498 4768 13448 31543 4135 3020 18737 8438 18167 30071 20256 32407 14095 1153 5450 7815 6963 14962 16802 20285 1813 7939 13455 18646 1642 13024 16541 22013 12867 32684 2675 1038 12443 26949 9477 7803 21036 9290 15882 31086 17032 30171 28337 20400 32356 8352 1167 14281 1079 8973 22236 29801 29444 10980 31712 9222 2931 25083 29352 5063 18215 30783 5373 14753 31308 3833 26007 6592 13167 26960 3725 6952 19859 1551 9232 3996 26753 1705 32601 29374 15199 1915 17888 9337 30084 19792 28879 8860 8587 27690 26806 1479 16038 19264 2432 17803 1077 10819 8870 1997 920 3045 18338 32619 7233 10652 1191 7715 30221 21667 19343 7600 30164 26691 11541 9269 24639 12624 12868 2015 7897 28406 27183 30150 23401 20662 32739 21 25984 5547 27802 22379 5710 12562 6705 13185 9913 6153 2524 12044 11185 7319 21273 6885 11453 31213 3810 3175 2266 30187 807 11032 7558 15334 8827 396 25624 21673 13326 21895 31058 24505 14299 19298 17209 29150 23330 22704 10532 15582 4377 18977 4628 25740 9183 24742 7491 9473 20913 18901 18688 11818 19040 30608 31673 22659 8450 6881 9050 5921 1512 17961 24278 19190 23761 31354 26114 23377 861 9281 9130 14244 23493 19240 13791 9866 28616 31034 18574 1544 16361 7496 32343 24851 4823 27788 23451 32339 22829 1933 26583 19495 31067 26178 31025 19945 6116 20346 24145 28275 12235 24444 23154 23522 3911 25066 10169 20634 3262 747 29637 28042 2033 7048 2695 2481 2933 7511 9044 6880 8802 24919 1080 7106 13903 24092 28558 4891 2429 2348 4045 8269 8530 26536 21925 12576 13577 4655 31819 17602 29865 12287 10257 24589 15411 11613 21305 5897 1824 12600 32011 20402 14346 5641 20261 8699 2218 27133 11539 30994 13826 14934 25119 23014 15579 11790 24938 29415 14962 13246 19516 22796 17775 18111 12953 5659 21270 3983 16917 27685 31937 25462 22249 29263 14734 26473 9029 28377 24661 23086 24808 4696 1501 18881 16623 30790 2895 14327 3562 4285 28906 29281 13365 22400 16633 8563 9350 31803 9986 21221 17602 24588 1857 858 25365 3137 10836 27456 24385 1636 20792 4855 32310 9589 17780 29237 7140 19574 14740 7849 12109 11821 3545 19934 21726 32293 19759 11875 21247 13046 30303 23593 19689 15814 25990 29740 6071 23312 29126 2901 26048 24740 4923 3231 15397 11503 9521 17018 26278 7037 6292 3949 23994 8892 10919 6654 21214 32515 29689 28630 22317 3794 25494 25633 20529 17500 31354 11572 12025 20546 23371 1394 7531 27042 583 21360 5596 22352 14715 7511 6366 7779 7477 19338 30041 31220 17597 32393 22238 34 25408 31766 3639 6233 29965 30614 18499 9941 19716 14777 9985 4449 5706 27485 28906 357 7746 1968 19076 1823 31417 14741 11828 561 24673 10314 5715 29532 15745 30535 3461 7051 27882 32105 6470 3091 5421 30543 12998 3129 2059 14597 16887 30709 13869 8927 20196 31733 2838 23976 23876 21221 17749 8700 9807 26606 7935 3827 9424 636 23132 21504 10108 24389 1761 12824 23938 23175 4702 6166 4451 3984 31353 24158 1540 4484 12891 26048 10754 8539 4265 7584 5445 1321 22966 13652 1240 25762 14839 31950 18679 20189 17591 14459 22890 19800 19211 27754 1042 10301 7945 252
     */
}
