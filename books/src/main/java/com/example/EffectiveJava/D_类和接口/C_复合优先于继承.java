package com.example.EffectiveJava.D_类和接口;

/**
 * Created by heshixiyang on 2017/5/28.
 */
public class C_复合优先于继承 {
    /**
     * 继承的缺点：
     * 1.一个类进行了继承，或许当时类是可用的，但是随着超类的演化，某一时刻其可能就不可用了
     * 2.超类的有些可继承的方法，可能在自身实现的时候进行了“自用”，而如果我们覆盖的时候不小心就会出现问题。
     * 3.就算不覆盖方法，可能某些时候超类新增了一个和实现类相同签名的方法，那么实现类又会出问题。
     *
     * 复合转发就可以代替一部分继承的情况
     * 1.如HashSet，我们需要在其上面扩展，可以让类实现Set并内置一个HashSet对象，然后在各个方法中调用HashSet的相应方法，当然可以在调用前后进行我们自己的操作
     * 2.注意这不是"委托",除非把包装对象传给被包装对象。
     * 3.只有子类是真正的超类的子类型的时候，才适合继承。这就是 is a和like a的区别。
     * 4.在绝大部分情况下用复合替代继承，能隐藏被拓展类细节，恶意避免被扩展类中api的缺陷，被传染到拓展类中
     */
}
